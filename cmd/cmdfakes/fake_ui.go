// Code generated by counterfeiter. DO NOT EDIT.
package cmdfakes

import (
	"sync"

	"github.com/goodmustache/appli.ed/cmd"
)

type FakeUI struct {
	DisplayTextStub        func(string, ...map[string]interface{})
	displayTextMutex       sync.RWMutex
	displayTextArgsForCall []struct {
		arg1 string
		arg2 []map[string]interface{}
	}
	invocations      map[string][][]interface{}
	invocationsMutex sync.RWMutex
}

func (fake *FakeUI) DisplayText(arg1 string, arg2 ...map[string]interface{}) {
	fake.displayTextMutex.Lock()
	fake.displayTextArgsForCall = append(fake.displayTextArgsForCall, struct {
		arg1 string
		arg2 []map[string]interface{}
	}{arg1, arg2})
	stub := fake.DisplayTextStub
	fake.recordInvocation("DisplayText", []interface{}{arg1, arg2})
	fake.displayTextMutex.Unlock()
	if stub != nil {
		fake.DisplayTextStub(arg1, arg2...)
	}
}

func (fake *FakeUI) DisplayTextCallCount() int {
	fake.displayTextMutex.RLock()
	defer fake.displayTextMutex.RUnlock()
	return len(fake.displayTextArgsForCall)
}

func (fake *FakeUI) DisplayTextCalls(stub func(string, ...map[string]interface{})) {
	fake.displayTextMutex.Lock()
	defer fake.displayTextMutex.Unlock()
	fake.DisplayTextStub = stub
}

func (fake *FakeUI) DisplayTextArgsForCall(i int) (string, []map[string]interface{}) {
	fake.displayTextMutex.RLock()
	defer fake.displayTextMutex.RUnlock()
	argsForCall := fake.displayTextArgsForCall[i]
	return argsForCall.arg1, argsForCall.arg2
}

func (fake *FakeUI) Invocations() map[string][][]interface{} {
	fake.invocationsMutex.RLock()
	defer fake.invocationsMutex.RUnlock()
	fake.displayTextMutex.RLock()
	defer fake.displayTextMutex.RUnlock()
	copiedInvocations := map[string][][]interface{}{}
	for key, value := range fake.invocations {
		copiedInvocations[key] = value
	}
	return copiedInvocations
}

func (fake *FakeUI) recordInvocation(key string, args []interface{}) {
	fake.invocationsMutex.Lock()
	defer fake.invocationsMutex.Unlock()
	if fake.invocations == nil {
		fake.invocations = map[string][][]interface{}{}
	}
	if fake.invocations[key] == nil {
		fake.invocations[key] = [][]interface{}{}
	}
	fake.invocations[key] = append(fake.invocations[key], args)
}

var _ cmd.UI = new(FakeUI)
